// Code generated by mockery v1.0.0. DO NOT EDIT.

package device

import context "context"
import inovibe_api_v3 "bitbucket.org/ino-on/ino-vibe-api"
import mock "github.com/stretchr/testify/mock"

// MockWriter is an autogenerated mock type for the Writer type
type MockWriter struct {
	mock.Mock
}

// UpdateConfig provides a mock function with given fields: _a0, _a1
func (_m *MockWriter) UpdateConfig(_a0 context.Context, _a1 *inovibe_api_v3.DeviceConfigUpdateRequest) (*inovibe_api_v3.DeviceResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *inovibe_api_v3.DeviceResponse
	if rf, ok := ret.Get(0).(func(context.Context, *inovibe_api_v3.DeviceConfigUpdateRequest) *inovibe_api_v3.DeviceResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*inovibe_api_v3.DeviceResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *inovibe_api_v3.DeviceConfigUpdateRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateInfo provides a mock function with given fields: _a0, _a1
func (_m *MockWriter) UpdateInfo(_a0 context.Context, _a1 *inovibe_api_v3.DeviceInfoUpdateRequest) (*inovibe_api_v3.DeviceResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *inovibe_api_v3.DeviceResponse
	if rf, ok := ret.Get(0).(func(context.Context, *inovibe_api_v3.DeviceInfoUpdateRequest) *inovibe_api_v3.DeviceResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*inovibe_api_v3.DeviceResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *inovibe_api_v3.DeviceInfoUpdateRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateStatus provides a mock function with given fields: _a0, _a1
func (_m *MockWriter) UpdateStatus(_a0 context.Context, _a1 *inovibe_api_v3.DeviceStatusUpdateRequest) (*inovibe_api_v3.DeviceResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *inovibe_api_v3.DeviceResponse
	if rf, ok := ret.Get(0).(func(context.Context, *inovibe_api_v3.DeviceStatusUpdateRequest) *inovibe_api_v3.DeviceResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*inovibe_api_v3.DeviceResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *inovibe_api_v3.DeviceStatusUpdateRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
